
if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}DNNQA_User_Score_GetByPortal') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE  {databaseOwner}{objectQualifier}DNNQA_User_Score_GetByPortal
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}DNNQA_User_Score_Log_Get') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE  {databaseOwner}{objectQualifier}DNNQA_User_Score_Log_Get
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}DNNQA_Question_GetUserAsked') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE  {databaseOwner}{objectQualifier}DNNQA_Question_GetUserAsked
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}DNNQA_Question_GetUserAnswered') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE  {databaseOwner}{objectQualifier}DNNQA_Question_GetUserAnswered
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}DNNQA_User_Score_GetByPortal] @PortalId INT
AS 
	SELECT  *
	FROM    {databaseOwner}{objectQualifier}DNNQA_User_Score
	WHERE   PortalId = @PortalId
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}DNNQA_User_Score_Log_Get]
	@UserId INT ,
	@PortalId INT
AS 
	SELECT  *
	FROM    {databaseOwner}{objectQualifier}DNNQA_User_Score_Log
	WHERE   UserId = @UserId
			AND PortalId = @PortalId
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}DNNQA_Question_GetUserAsked]
	@PortalId INT ,
	@UserId INT
AS 
	SELECT  PostId ,
			( SELECT    Title
			  FROM      {databaseOwner}{objectQualifier}DNNQA_Post
			  WHERE     PostId = vp.PostId
			) AS Title ,
			Body ,
			Bounty ,
			ParentId ,
			PortalId ,
			ViewCount ,
			Score ,
			Approved ,
			ApprovedDate ,
			Deleted ,
			AnswerId ,
			AnswerDate ,
			Closed ,
			ClosedDate ,
			Protected ,
			ProtectedDate ,
			CreatedUserId ,
			CreatedDate ,
			LastModifiedUserId ,
			LastModifiedDate ,
			ContentItemId ,
			Content ,
			ContentTypeId ,
			TabID ,
			ModuleID ,
			ContentKey ,
			Indexed ,
			CreatedByUserId ,
			CreatedOnDate ,
			LastModifiedByUserId ,
			LastModifiedOnDate ,
			( SELECT TOP ( 1 )
						CreatedUserID
			  FROM      {databaseOwner}{objectQualifier}vw_DNNQA_Posts
			  WHERE     ( PostID = vp.PostID
						  OR ParentID = vp.PostID
						)
						AND Deleted = 0
						AND Approved = 1
			  ORDER BY  CreatedDate DESC
			) AS LastApprovedUserID ,
			( SELECT TOP ( 1 )
						CreatedDate
			  FROM      {databaseOwner}{objectQualifier}vw_DNNQA_Posts
			  WHERE     ( PostID = vp.PostID
						  OR ParentID = vp.PostID
						)
						AND Deleted = 0
						AND Approved = 1
			  ORDER BY  CreatedDate DESC
			) AS LastApprovedDate ,
			( SELECT    COUNT(PostId)
			  FROM      {databaseOwner}{objectQualifier}DNNQA_Post
			  WHERE     ( ParentId = vp.PostId )
						AND ( ParentId <> 0 )
						AND ( Approved = 1 )
						AND ( Deleted = 0 )
			) AS TotalAnswers ,
			( SELECT    COUNT(PostId)
			  FROM      {databaseOwner}{objectQualifier}DNNQA_Vote
			  WHERE     PostID = vp.PostID
						AND VoteTypeID = 1
			) AS UpVotes ,
			( SELECT    COUNT(PostId)
			  FROM      {databaseOwner}{objectQualifier}DNNQA_Vote
			  WHERE     PostID = vp.PostID
						AND VoteTypeID = -1
			) AS DownVotes ,
			( SELECT    COUNT(PostId)
			  FROM      {databaseOwner}{objectQualifier}vw_DNNQA_Posts
			  WHERE     PortalID = @PortalId
						AND ParentId = 0
						AND CreatedUserID = @UserId
						AND Deleted = 0
						AND Approved = 1
			) AS TotalRecords
	FROM    {databaseOwner}{objectQualifier}vw_DNNQA_Posts vp
	WHERE   PortalId = @PortalId
			AND ParentId = 0
			AND CreatedUserId = @UserId
			AND Deleted = 0
			AND Approved = 1
	ORDER BY LastApprovedDate DESC
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}DNNQA_Question_GetUserAnswered]
	@PortalId INT ,
	@UserId INT
AS 
	SELECT  PostId ,
			( SELECT    Title
			  FROM      {databaseOwner}{objectQualifier}DNNQA_Post
			  WHERE     PostId = vp.ParentId
			) AS Title ,
			Body ,
			Bounty ,
			ParentId ,
			PortalId ,
			ViewCount ,
			Score ,
			Approved ,
			ApprovedDate ,
			Deleted ,
			AnswerId ,
			AnswerDate ,
			Closed ,
			ClosedDate ,
			Protected ,
			ProtectedDate ,
			CreatedUserId ,
			CreatedDate ,
			LastModifiedUserId ,
			LastModifiedDate ,
			ContentItemId ,
			Content ,
			ContentTypeId ,
			TabId ,
			ModuleId ,
			ContentKey ,
			Indexed ,
			CreatedByUserId ,
			CreatedOnDate ,
			LastModifiedByUserId ,
			LastModifiedOnDate ,
			( SELECT TOP ( 1 )
						CreatedUserID
			  FROM      {databaseOwner}{objectQualifier}vw_DNNQA_Posts
			  WHERE     ( PostID = vp.PostID
						  OR ParentID = vp.PostID
						)
						AND Deleted = 0
						AND Approved = 1
			  ORDER BY  CreatedDate DESC
			) AS LastApprovedUserID ,
			( SELECT TOP ( 1 )
						CreatedDate
			  FROM      {databaseOwner}{objectQualifier}vw_DNNQA_Posts
			  WHERE     ( PostID = vp.PostID
						  OR ParentID = vp.PostID
						)
						AND Deleted = 0
						AND Approved = 1
			  ORDER BY  CreatedDate DESC
			) AS LastApprovedDate ,
			( SELECT    COUNT(PostId)
			  FROM      {databaseOwner}{objectQualifier}DNNQA_Post
			  WHERE     ( ParentId = vp.ParentId )
						AND ( ParentId <> 0 )
						AND ( Approved = 1 )
						AND ( Deleted = 0 )
			) AS TotalAnswers ,
			( SELECT    COUNT(PostId)
			  FROM      {databaseOwner}{objectQualifier}DNNQA_Vote
			  WHERE     PostID = vp.PostID
						AND VoteTypeID = 1
			) AS UpVotes ,
			( SELECT    COUNT(PostId)
			  FROM      {databaseOwner}{objectQualifier}DNNQA_Vote
			  WHERE     PostID = vp.PostID
						AND VoteTypeID = -1
			) AS DownVotes ,
			( SELECT    COUNT(PostId)
			  FROM      {databaseOwner}{objectQualifier}vw_DNNQA_Posts
			  WHERE     PortalID = @PortalId
						AND CreatedUserId = @UserId
						AND ParentId <> 0
						AND Deleted = 0
						AND Approved = 1
			) AS TotalRecords
	FROM    {databaseOwner}{objectQualifier}vw_DNNQA_Posts vp
	WHERE   PortalID = @PortalId
			AND CreatedUserId = @UserId
			AND ParentId <> 0
			AND Deleted = 0
			AND Approved = 1
	ORDER BY LastApprovedDate DESC
GO
