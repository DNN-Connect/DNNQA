<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="dnnlblAcceptedQAnswer.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they accept an answer to their question.</value>
  </data>
  <data name="dnnlblAcceptedQAnswer.Text" xml:space="preserve">
    <value>Accepted Question Answer</value>
  </data>
  <data name="dnnlblApprovedPostEdit.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they approve a post edit.</value>
  </data>
  <data name="dnnlblApprovedPostEdit.Text" xml:space="preserve">
    <value>Approved Post Edit</value>
  </data>
  <data name="dnnlblApproveTagEdit.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they approve a tag edit.</value>
  </data>
  <data name="dnnlblApproveTagEdit.Text" xml:space="preserve">
    <value>Approved Term Edit</value>
  </data>
  <data name="dnnlblAskedFlaggedQ.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they asked a question that was flagged (the process must be fully complete within the window).</value>
  </data>
  <data name="dnnlblAskedFlaggedQ.Text" xml:space="preserve">
    <value>Asked Flagged Question</value>
  </data>
  <data name="dnnlblAskedQ.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they ask a question.</value>
  </data>
  <data name="dnnlblAskedQ.Text" xml:space="preserve">
    <value>Asked Question</value>
  </data>
  <data name="dnnlblAskedQVotedDown.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they asked a question that was down-voted (the process must be completed within the window). </value>
  </data>
  <data name="dnnlblAskedQVotedDown.Text" xml:space="preserve">
    <value>Asked Question Down-voted</value>
  </data>
  <data name="dnnlblAskedQVotedUp.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they asked a question that was up-voted (each up-vote counts).</value>
  </data>
  <data name="dnnlblAskedQVotedUp.Text" xml:space="preserve">
    <value>Asked Question Up-voted</value>
  </data>
  <data name="dnnlblCommented.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they comment on a post.</value>
  </data>
  <data name="dnnlblCommented.Text" xml:space="preserve">
    <value>Commented</value>
  </data>
  <data name="dnnlblCreatedSynonym.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they create a tag synonym.</value>
  </data>
  <data name="dnnlblCreatedSynonym.Text" xml:space="preserve">
    <value>Created Synonym</value>
  </data>
  <data name="dnnlblEditedPost.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they edit a post (that is approved).</value>
  </data>
  <data name="dnnlblEditedPost.Text" xml:space="preserve">
    <value>Edited Post</value>
  </data>
  <data name="dnnlblEditedTag.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they edit a tag (that is approved). </value>
  </data>
  <data name="dnnlblEditedTag.Text" xml:space="preserve">
    <value>Edited Term</value>
  </data>
  <data name="dnnlblEditedTagVotedDown.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they edited a tag that was down-voted (the process must be completed within the window). </value>
  </data>
  <data name="dnnlblEditedTagVotedDown.Text" xml:space="preserve">
    <value>Edited Term Down-voted</value>
  </data>
  <data name="dnnlblEditedTagVotedUp.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they edited a tag that was up-voted (each up-vote counts). </value>
  </data>
  <data name="dnnlblEditedTagVotedUp.Text" xml:space="preserve">
    <value>Edited Term Up-voted</value>
  </data>
  <data name="dnnlblFirstLoggedInView.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive the first time they view the Q&amp;A module logged in.</value>
  </data>
  <data name="dnnlblFirstLoggedInView.Text" xml:space="preserve">
    <value>First Logged-in View</value>
  </data>
  <data name="dnnlblProvidedA.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they provide an answer to a question. </value>
  </data>
  <data name="dnnlblProvidedA.Text" xml:space="preserve">
    <value>Provided Answer</value>
  </data>
  <data name="dnnlblProvidedAcceptedA.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they provided an answer that was accepted by the question author (This is in addition to any bounty that may also be applied).</value>
  </data>
  <data name="dnnlblProvidedAcceptedA.Text" xml:space="preserve">
    <value>Provided Accepted Answer</value>
  </data>
  <data name="dnnlblProvidedAVotedDown.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they provided an answer that was down-voted (the process must be completed within the window). </value>
  </data>
  <data name="dnnlblProvidedAVotedDown.Text" xml:space="preserve">
    <value>Provided Answer Down-voted</value>
  </data>
  <data name="dnnlblProvidedAVotedUp.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they provide an answer that was up-voted (each up-vote counts).</value>
  </data>
  <data name="dnnlblProvidedAVotedUp.Text" xml:space="preserve">
    <value>Provided Answer Up-voted</value>
  </data>
  <data name="dnnlblProvidedFlaggedA.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they provide an answer that was flagged (the process must be completed within the window).</value>
  </data>
  <data name="dnnlblProvidedFlaggedA.Text" xml:space="preserve">
    <value>Provided Flagged Answer</value>
  </data>
  <data name="dnnlblVotedADown.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they down-vote an answer. </value>
  </data>
  <data name="dnnlblVotedADown.Text" xml:space="preserve">
    <value>Down-voted Answer</value>
  </data>
  <data name="dnnlblVotedAUp.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they up-vote an answer.</value>
  </data>
  <data name="dnnlblVotedAUp.Text" xml:space="preserve">
    <value>Up-voted Answer</value>
  </data>
  <data name="dnnlblVotedQDown.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they down-vote a question.</value>
  </data>
  <data name="dnnlblVotedQDown.Text" xml:space="preserve">
    <value>Down-voted Question</value>
  </data>
  <data name="dnnlblVotedQUp.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they up-vote a question.</value>
  </data>
  <data name="dnnlblVotedQUp.Text" xml:space="preserve">
    <value>Up-voted Question</value>
  </data>
  <data name="dnnlblVotedSDown.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they down-vote a synonym. </value>
  </data>
  <data name="dnnlblVotedSDown.Text" xml:space="preserve">
    <value>Down-voted Synonym</value>
  </data>
  <data name="dnnlblVotedSUp.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they up-vote a synonym. </value>
  </data>
  <data name="dnnlblVotedSUp.Text" xml:space="preserve">
    <value>Up-voted Synonym</value>
  </data>
  <data name="dnnlblVotedTDown.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they down-vote a term.</value>
  </data>
  <data name="dnnlblVotedTDown.Text" xml:space="preserve">
    <value>Down-voted Term</value>
  </data>
  <data name="dnnlblVotedTUp.Help" xml:space="preserve">
    <value>The number of 'points' a user will receive when they up-vote a term. </value>
  </data>
  <data name="dnnlblVotedTUp.Text" xml:space="preserve">
    <value>Up-voted Term</value>
  </data>
  <data name="ScoringValues.Text" xml:space="preserve">
    <value>User Scoring (Builds Reputation)</value>
  </data>
</root>